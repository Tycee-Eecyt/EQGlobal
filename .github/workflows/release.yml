name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-windows:
    name: Build Windows Installer
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        shell: pwsh
        run: |
          npm ci
          if ($LASTEXITCODE -ne 0) {
            Write-Host "npm ci failed; falling back to npm install"
            npm install
          }

      - name: Build installer and publish to GitHub Releases
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx electron-builder --win nsis -p always

      - name: Upload artifacts (for CI browsing)
        uses: actions/upload-artifact@v4
        with:
          name: windows-dist
          path: |
            dist/EQGlobal-Setup-*.exe
            dist/EQGlobal-Setup-*.exe.blockmap
            dist/latest.yml

  build-macos:
    name: Build macOS App
    runs-on: macos-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci || npm install

      - name: Build macOS (unsigned) and publish
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO: 'false'
        run: npx electron-builder --mac dmg -p always

      - name: Upload artifacts (for CI browsing)
        uses: actions/upload-artifact@v4
        with:
          name: macos-dist
          path: |
            dist/*.dmg
            dist/*-mac.zip
            dist/latest-mac.yml

  build-linux:
    name: Build Linux App
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci || npm install

      - name: Build Linux (AppImage) and publish
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx electron-builder --linux AppImage -p always

      - name: Upload artifacts (for CI browsing)
        uses: actions/upload-artifact@v4
        with:
          name: linux-dist
          path: |
            dist/*.AppImage
            dist/latest-linux.yml

